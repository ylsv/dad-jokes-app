{"version":3,"sources":["Joke.js","JokeList.js","App.js","serviceWorker.js","index.js"],"names":["Joke","this","props","votes","className","onClick","upvote","style","borderColor","getColor","downvote","text","getEmoji","Component","JokeList","state","jokes","JSON","parse","window","localStorage","getItem","loading","seenJokes","Set","map","j","handleClick","bind","handleRemove","length","getJokes","numJokesToGet","axios","get","headers","Accept","res","newJoke","data","joke","has","push","id","uuid","setState","st","setItem","stringify","alert","delta","clear","sort","a","b","src","key","handleVote","defaultProps","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.696bc6ab.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Joke.css';\r\n\r\nexport default class Joke extends Component {\r\n\tgetColor() {\r\n\t\tif (this.props.votes >= 15) {\r\n\t\t\treturn '#4CAF50';\r\n\t\t} else if (this.props.votes >= 12) {\r\n\t\t\treturn '#8BC34A';\r\n\t\t} else if (this.props.votes >= 9) {\r\n\t\t\treturn '#CDDC39';\r\n\t\t} else if (this.props.votes >= 6) {\r\n\t\t\treturn '#FFEB3B';\r\n\t\t} else if (this.props.votes >= 3) {\r\n\t\t\treturn '#FFC107';\r\n\t\t} else if (this.props.votes >= 0) {\r\n\t\t\treturn '#FF9800';\r\n\t\t} else {\r\n\t\t\treturn '#f44336';\r\n\t\t}\r\n\t}\r\n\tgetEmoji() {\r\n\t\tif (this.props.votes >= 15) {\r\n\t\t\treturn 'em em-rolling_on_the_floor_laughing';\r\n\t\t} else if (this.props.votes >= 12) {\r\n\t\t\treturn 'em em-laughing';\r\n\t\t} else if (this.props.votes >= 9) {\r\n\t\t\treturn 'em em-smiley';\r\n\t\t} else if (this.props.votes >= 6) {\r\n\t\t\treturn 'em em-slightly_smiling_face';\r\n\t\t} else if (this.props.votes >= 3) {\r\n\t\t\treturn 'em em-neutral_face';\r\n\t\t} else if (this.props.votes >= 0) {\r\n\t\t\treturn 'em em-confused';\r\n\t\t} else {\r\n\t\t\treturn 'em em-angry';\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Joke\">\r\n\t\t\t\t<div className=\"Joke-buttons\">\r\n\t\t\t\t\t<i className=\"fas fa-arrow-up\" onClick={this.props.upvote} />\r\n\t\t\t\t\t<span className=\"Joke-votes\" style={{ borderColor: this.getColor() }}>\r\n\t\t\t\t\t\t{this.props.votes}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<i className=\"fas fa-arrow-down\" onClick={this.props.downvote} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"Joke-text\">{this.props.text}</div>\r\n\t\t\t\t<div className=\"Joke-smiley\">\r\n\t\t\t\t\t<i className={this.getEmoji()} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\nimport Joke from './Joke';\nimport axios from 'axios';\nimport uuid from 'uuid/v4';\nimport './JokeList.css';\n\nclass JokeList extends Component {\n\tstatic defaultProps = {\n\t\tnumJokesToGet: 10\n\t};\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tjokes: JSON.parse(window.localStorage.getItem('jokes') || '[]'),\n\t\t\tloading: false\n\t\t};\n\t\tthis.seenJokes = new Set(this.state.jokes.map((j) => j.text));\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.handleRemove = this.handleRemove.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\tif (this.state.jokes.length === 0) this.getJokes();\n\t}\n\tasync getJokes() {\n\t\ttry {\n\t\t\tlet jokes = [];\n\t\t\twhile (jokes.length < this.props.numJokesToGet) {\n\t\t\t\tlet res = await axios.get('https://icanhazdadjoke.com/', {\n\t\t\t\t\theaders: { Accept: 'application/json' }\n\t\t\t\t});\n\t\t\t\tlet newJoke = res.data.joke;\n\t\t\t\tif (!this.seenJokes.has(newJoke)) {\n\t\t\t\t\tjokes.push({ id: uuid(), text: newJoke, votes: 0 });\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState(\n\t\t\t\t(st) => ({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tjokes: [ ...st.jokes, ...jokes ]\n\t\t\t\t}),\n\t\t\t\t() => window.localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\n\t\t\t);\n\t\t} catch (e) {\n\t\t\talert(e);\n\t\t\tthis.setState({ loading: false });\n\t\t}\n\t}\n\thandleVote(id, delta) {\n\t\tthis.setState(\n\t\t\t(st) => ({\n\t\t\t\tjokes: st.jokes.map((j) => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n\t\t\t}),\n\t\t\t() => window.localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\n\t\t);\n\t}\n\thandleClick() {\n\t\tthis.setState({ loading: true }, this.getJokes);\n\t}\n\thandleRemove() {\n\t\tthis.setState({ jokes: [] }, () => window.localStorage.clear());\n\t}\n\trender() {\n\t\tif (this.state.loading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"JokeList-spinner\">\n\t\t\t\t\t<i className=\"far fa-8x fa-laugh fa-spin\" />\n\t\t\t\t\t<h1 className=\"JokeList-title\">Loading...</h1>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\tlet jokes = this.state.jokes.sort((a, b) => b.votes - a.votes);\n\t\treturn (\n\t\t\t<div className=\"JokeList\">\n\t\t\t\t<div className=\"JokeList-sidebar\">\n\t\t\t\t\t<h1 className=\"JokeList-title\">\n\t\t\t\t\t\t<span>Dad</span> Jokes\n\t\t\t\t\t</h1>\n\t\t\t\t\t<img src=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\" />\n\t\t\t\t\t<button className=\"JokeList-getmore\" onClick={this.handleClick}>\n\t\t\t\t\t\tFetch Jokes\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"JokeList-remove\" onClick={this.handleRemove}>\n\t\t\t\t\t\tRemove Jokes\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"JokeList-jokes\">\n\t\t\t\t\t{jokes.map((j) => (\n\t\t\t\t\t\t<Joke\n\t\t\t\t\t\t\tkey={j.id}\n\t\t\t\t\t\t\tvotes={j.votes}\n\t\t\t\t\t\t\ttext={j.text}\n\t\t\t\t\t\t\tupvote={() => this.handleVote(j.id, 1)}\n\t\t\t\t\t\t\tdownvote={() => this.handleVote(j.id, -1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default JokeList;\n","import React from 'react';\nimport JokeList from './JokeList';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<JokeList />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}